// <auto-generated />
using System;
using MSA.Phase2.Weatherman.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSA.Phase2.Weatherman.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    partial class WeatherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.6.22329.4");

            modelBuilder.Entity("MSA.Phase2.Weatherman.Models.Main", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeatherInfoForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<float>("feels_like")
                        .HasColumnType("REAL");

                    b.Property<float>("temp")
                        .HasColumnType("REAL");

                    b.Property<float>("temp_max")
                        .HasColumnType("REAL");

                    b.Property<float>("temp_min")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("WeatherInfoForeignKey")
                        .IsUnique();

                    b.ToTable("Main");
                });

            modelBuilder.Entity("MSA.Phase2.Weatherman.Models.Weather", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeatherInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("WeatherInfoId");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("MSA.Phase2.Weatherman.Models.WeatherInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("cod")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("dt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("visibility")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("WeatherInfo");
                });

            modelBuilder.Entity("MSA.Phase2.Weatherman.Models.Main", b =>
                {
                    b.HasOne("MSA.Phase2.Weatherman.Models.WeatherInfo", "WeatherInfo")
                        .WithOne("Main")
                        .HasForeignKey("MSA.Phase2.Weatherman.Models.Main", "WeatherInfoForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherInfo");
                });

            modelBuilder.Entity("MSA.Phase2.Weatherman.Models.Weather", b =>
                {
                    b.HasOne("MSA.Phase2.Weatherman.Models.WeatherInfo", "WeatherInfo")
                        .WithMany("Weather")
                        .HasForeignKey("WeatherInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherInfo");
                });

            modelBuilder.Entity("MSA.Phase2.Weatherman.Models.WeatherInfo", b =>
                {
                    b.Navigation("Main")
                        .IsRequired();

                    b.Navigation("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
